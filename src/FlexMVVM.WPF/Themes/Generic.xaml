<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:FlexMVVM.WPF">
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <Style TargetType="{x:Type local:FlexTextBox}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FlexTextBox}">
                    <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <TextBlock
                                x:Name="PART_WATERMAKRTEXT"
                                Margin="4,0,0,0"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                Foreground="{Binding WaterMarkTextColor, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                IsHitTestVisible="False"
                                Text="{Binding WaterMarkText, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Visibility="{Binding Text.IsEmpty, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Margin="0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:FlexCheckBox}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FlexCheckBox}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.Column="0"
                            Width="{Binding CheckBoxSize, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Height="{Binding CheckBoxSize, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Padding="{TemplateBinding Padding}"
                            local:PaddingSize.TrackPaddingContentSize="True"
                            Background="{Binding Color, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Viewbox
                                Width="{Binding (local:PaddingSize.ContentWidth), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}}"
                                Height="{Binding (local:PaddingSize.ContentHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}}"
                                Stretch="Fill">
                                <Grid>
                                    <Path
                                        x:Name="CheckMark"
                                        Fill="{Binding ForeColor, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        SnapsToDevicePixels="False"
                                        Stroke="{Binding ForeColor, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        StrokeEndLineCap="Round"
                                        StrokeStartLineCap="Round"
                                        StrokeThickness="2"
                                        Visibility="Collapsed" />
                                    <Path
                                        x:Name="InderminateMark"
                                        Fill="{Binding ForeColor, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        SnapsToDevicePixels="False"
                                        Stroke="{Binding ForeColor, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        StrokeEndLineCap="Round"
                                        StrokeStartLineCap="Round"
                                        StrokeThickness="2"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Viewbox>
                        </Border>
                        <ContentPresenter
                            Grid.Column="1"
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InderminateMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FlexButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FlexButton}">
                    <Border
                        x:Name="Border"
                        Grid.Column="0"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:FlexDivider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FlexDivider}">
                    <Grid
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Line x:Name="lineGeometry" Grid.Column="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FlexComponent}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FlexComponent}">
                    <Border
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
